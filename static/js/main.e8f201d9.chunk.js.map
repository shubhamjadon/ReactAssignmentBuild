{"version":3,"sources":["components/CategoryTab.js","components/ProductTile.js","components/Loading.js","components/ProductSkeleton.js","App.js","index.js"],"names":["CategoryTab","title","image","onClick","Card","style","minWidth","marginRight","cursor","CardContent","backgroundImage","backgroundSize","backgroundPosition","color","textAlign","ProductTile","name","weight","isInStock","price","finalPrice","rating","reviewCount","isLargeScreen","useMediaQuery","height","Grid","container","item","xs","sm","md","src","alt","width","spacing","fontSize","display","alignItems","paddingTop","paddingBottom","Rating","size","value","precision","readOnly","textDecoration","Button","disableElevation","variant","fullWidth","backgroundColor","disabled","Loading","justifyContent","CircularProgress","ProductSkeleton","viewAll","map","ele","index","borderBottom","padding","Skeleton","App","useState","currentCategory","setCurrentCategory","categoryObj","setCategoryObj","setViewAll","anchorEl","setAnchorEl","queryConfig","refetchOnWindowFocus","staleTime","useQuery","axios","get","then","res","data","category_list","isInitialLoading","isLoading","categoryList","queryKey","products","productList","useEffect","obj","forEach","category_id","category_name","handleMenu","id","className","Container","maxWidth","flexWrap","category_image","image_urls","x300","weight_unit","is_in_stock","final_price","review_count","textTransform","e","currentTarget","fontWeight","Menu","keepMounted","open","Boolean","onClose","MenuItem","paddingLeft","paddingRight","background","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"4TAKe,SAASA,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAClD,OACE,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,SAAU,QAASC,YAAa,OAAQC,OAAQ,WACzDL,QAASA,EAFX,SAIE,cAACM,EAAA,EAAD,CACEJ,MAAO,CACLK,gBAAgB,OAAD,OAASR,EAAT,KACfS,eAAgB,QAChBC,mBAAoB,SACpBC,MAAO,aACPC,UAAW,UANf,SASGb,M,aChBM,SAASc,EAAT,GASX,IARFb,EAQC,EARDA,MACAc,EAOC,EAPDA,KACAC,EAMC,EANDA,OACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,OACAC,EACC,EADDA,YAEMC,EAAgBC,YAAc,qBACpC,OACE,qBAAKnB,MAAO,CAAEoB,OAAQ,QAAtB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACtB,MAAO,CAAEoB,OAAQ,QAAjC,UACE,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA9B,SACE,8BACE,qBACEC,IAAK9B,EACL+B,IAAKjB,EACLX,MAAOkB,EAAgB,GAAK,CAAEW,MAAO,cAI3C,eAACR,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTE,GAAI,EACJC,GAAI,GACJK,QAASZ,EAAgB,EAAI,EAC7BQ,GAAI,GACJ1B,MAAO,CAAE+B,SAAU,QAPrB,UASE,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACGb,IAEH,eAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIxB,MAAO,CAAEQ,MAAO,UAAWuB,SAAU,QAAxD,cACInB,EADJ,OAGA,eAACS,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJxB,MAAO,CACLgC,QAAS,OACTC,WAAY,SACZzB,MAAO,UACP0B,WAAY,MACZC,cAAe,OARnB,UAWE,cAACC,EAAA,EAAD,CACEzB,KAAK,SACL0B,KAAK,QACLC,MAAOtB,EACPuB,UAAW,GACXC,UAAQ,IAhBZ,IAkBIvB,GAA4B,EAlBhC,OAoBA,eAACI,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAApB,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,6CAAWT,OAEZD,IAAUC,EACT,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,yBAAQxB,MAAO,CAAEyC,eAAgB,gBAAjC,oBACK3B,OAGL,QAEN,cAACO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIxB,MAAO,CAAEkC,WAAY,OAAxC,SACGrB,EACC,cAAC6B,EAAA,EAAD,CACEC,kBAAgB,EAChBC,QAAQ,YACRC,UAAW3B,EACXlB,MAAO,CAAE8C,gBAAiB,UAAWtC,MAAO,QAJ9C,yBASA,cAACkC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,QAAQ,YACRG,UAAQ,EACRF,UAAW3B,EACXlB,MAAO,CAAEQ,MAAO,QALlB,oC,aClFC,SAASwC,IACtB,OACE,qBACEhD,MAAO,CACLoB,OAAQ,QACRY,QAAS,OACTiB,eAAgB,SAChBhB,WAAY,UALhB,SAQE,cAACiB,EAAA,EAAD,CAAkBlD,MAAO,CAAEQ,MAAO,e,aCTzB,SAAS2C,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QAClClC,EAAgBC,YAAc,qBAEpC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGkC,KAAI,SAACC,EAAKC,GAC/B,OAAKH,GAAWG,EAAQ,EAAU,KAEhC,cAAClC,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GAEJC,GAAI,EACJC,GAAI,EACJ1B,MAAO,CACLwD,aAAc,oBACdC,QAASvC,EAAgB,YAAc,UAR3C,SAWE,qBAAKlB,MAAO,CAAEoB,OAAQ,OAAQS,MAAO,QAArC,SACE,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACQ,QAAS,EAAG9B,MAAO,CAAEoB,OAAQ,QAA7C,UACE,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA9B,SACE,cAACgC,EAAA,EAAD,CACEd,QAAQ,OACRf,MAAM,OACNT,OAAQF,EAAgB,IAAM,WAGlC,eAACG,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTE,GAAI,EACJC,GAAI,GACJK,QAASZ,EAAgB,EAAI,EAC7BQ,GAAI,GACJ1B,MAAO,CAAE+B,SAAU,QAPrB,UASE,cAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACkC,EAAA,EAAD,CAAUd,QAAQ,WAEpB,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIxB,MAAO,CAAEQ,MAAO,UAAWuB,SAAU,QAAxD,SACE,cAAC2B,EAAA,EAAD,CAAUd,QAAQ,WAEpB,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACkC,EAAA,EAAD,CAAUd,QAAQ,WAEpB,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIxB,MAAO,CAAEkC,WAAY,OAAxC,SACE,cAACwB,EAAA,EAAD,CAAUd,QAAQ,OAAOf,MAAM,OAAOT,OAAO,oBApChDkC,MC8KEK,MAzKf,WACE,MAA8CC,mBAAS,KAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOR,EAAP,KAAgBa,EAAhB,KACM/C,EAAgBC,YAAc,qBACpC,EAAgCyC,mBAAS,MAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACMC,EAAc,CAAEC,sBAAsB,EAAOC,UAAW,KAC9D,EAA4DC,YAC1D,eACA,WACE,OAAOC,IACJC,IACC,oFAEDC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,mBAE5BT,GATiBU,EAAnB,EAAQC,UAAmCC,EAA3C,EAAqCJ,KAYrC,EAAyCL,YACvC,CAAC,aAAc,CAAEV,qBACjB,YAAmB,IAAhBoB,EAAe,EAAfA,SACD,cAAoCA,EAApC,GAAepB,GAAf,UAAeA,iBACf,OAAOW,IACJC,IADI,4EAEkEZ,IAEtEa,MAAK,SAACC,GAAD,uBAASA,EAAIC,YAAb,aAAS,EAAUM,cAE7Bd,GAVMW,EAAR,EAAQA,UAAiBI,EAAzB,EAAmBP,KAanBQ,qBAAU,WACR,IAAIC,EAAM,GACE,OAAZL,QAAY,IAAZA,KAAcM,SAAQ,SAAChC,GACrB+B,EAAI/B,EAAIiC,aAAejC,EAAIkC,iBAE7BxB,EAAe,eAAKqB,MACnB,CAACL,IAGJ,IAAMS,EAAa,SAACC,GAClBvB,EAAY,MACRuB,GAAI5B,EAAmB4B,IAG7B,OAAIZ,EAAyB,cAAC9B,EAAD,IAE3B,sBAAK2C,UAAU,MAAf,UACE,uBACA,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,UACE,qBAAK7F,MAAO,CAAEgC,QAAS,OAAQ8D,SAAU,UAAzC,SACGd,EAAa3B,KAAI,SAACC,GAAD,OAChB,cAAC3D,EAAD,CAEEC,MAAO0D,EAAIkC,cACX3F,MAAOyD,EAAIyC,eACXjG,QAAS,kBAAMgE,EAAmBR,EAAIiC,eAHjCjC,EAAIiC,oBAQjB,uBACA,cAAClE,EAAA,EAAD,CAAMC,WAAS,EAAf,SACGyD,EACC,cAAC5B,EAAD,CAAiBC,QAASA,IAE1B+B,EAAY9B,KAAI,SAAC9B,EAAMgC,GACrB,OAAKH,GAAWG,EAAQ,EAAU,KAEhC,cAAClC,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EAEJ1B,MAAO,CACLwD,aAAc,oBACdC,QAASvC,EAAgB,YAAc,UAR3C,SAWE,cAACR,EAAD,CACEb,MAAO0B,EAAKyE,WAAWC,KACvBtF,KAAMY,EAAKZ,KACXC,OAAQW,EAAKX,OAAS,IAAMW,EAAK2E,YACjCrF,UAAWU,EAAK4E,YAChBrF,MAAOS,EAAKT,MACZC,WAAYQ,EAAK6E,YACjBpF,OAAQO,EAAKP,OACbC,YAAaM,EAAK8E,gBAdf9E,EAAKmE,SAqBpB,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CACEE,QAAQ,WACRP,KAAK,QACLrC,MAAO,CACL+B,SAAU,OACVuE,cAAe,OACfzE,MAAO,OACP4B,QAAS,OAEX3D,QAAS,SAACyG,GAAD,OAAOpC,EAAYoC,EAAEC,gBAThC,SAWE,eAACnF,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,0BAGA,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGxB,MAAO,CAAEyG,WAAY,KAAvC,SACG1C,EAAYF,KAEf,cAACxC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGxB,MAAO,CAAES,UAAW,OAAtC,2BAMN,cAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACkB,EAAA,EAAD,CACEE,QAAQ,WACRP,KAAK,QACLrC,MAAO,CACL+B,SAAU,OACVuE,cAAe,OACfzE,MAAO,OACPT,OAAQ,QAEVtB,QAAS,kBAAMmE,GAAYb,IAT7B,SAWGA,EAAU,gBAAkB,uBAInC,cAACsD,EAAA,EAAD,CACEhB,GAAG,eACHxB,SAAUA,EACVyC,aAAW,EACXC,KAAMC,QAAQ3C,GACd4C,QAAS,kBAAMrB,KACfzF,MAAO,CAAE6B,MAAO,QANlB,SAQGmD,EAAa3B,KAAI,SAAC9B,GAAD,OAChB,cAACwF,EAAA,EAAD,CAEEjH,QAAS,kBAAM2F,EAAWlE,EAAKgE,cAC/BvF,MAAO,CACLgH,YAAa,OACbC,aAAc,OACdC,WACE3F,EAAKgE,cAAgB1B,EACjB,UACA,eATV,SAYGtC,EAAKiE,eAXDjE,EAAKgE,yBCjKlB4B,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,U","file":"static/js/main.e8f201d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nexport default function CategoryTab({ title, image, onClick }) {\r\n  return (\r\n    <Card\r\n      style={{ minWidth: \"180px\", marginRight: \"20px\", cursor: \"pointer\" }}\r\n      onClick={onClick}\r\n    >\r\n      <CardContent\r\n        style={{\r\n          backgroundImage: `url(${image})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          color: \"whitesmoke\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {title}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Button, useMediaQuery } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nexport default function ProductTile({\r\n  image,\r\n  name,\r\n  weight,\r\n  isInStock,\r\n  price,\r\n  finalPrice,\r\n  rating,\r\n  reviewCount,\r\n}) {\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <Grid container style={{ height: \"100%\" }}>\r\n        <Grid item xs={4} sm={12} md={12}>\r\n          <div>\r\n            <img\r\n              src={image}\r\n              alt={name}\r\n              style={isLargeScreen ? {} : { width: \"100%\" }}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={8}\r\n          sm={12}\r\n          spacing={isLargeScreen ? 1 : 0}\r\n          md={12}\r\n          style={{ fontSize: \"14px\" }}\r\n        >\r\n          <Grid item xs={12}>\r\n            {name}\r\n          </Grid>\r\n          <Grid item xs={12} style={{ color: \"#757575\", fontSize: \"12px\" }}>\r\n            ({weight})\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              color: \"#757575\",\r\n              paddingTop: \"5px\",\r\n              paddingBottom: \"7px\",\r\n            }}\r\n          >\r\n            <Rating\r\n              name=\"rating\"\r\n              size=\"small\"\r\n              value={rating}\r\n              precision={0.1}\r\n              readOnly\r\n            />\r\n            ({reviewCount ? reviewCount : 0})\r\n          </Grid>\r\n          <Grid item container>\r\n            <Grid item xs={3}>\r\n              <strong>₹ {finalPrice}</strong>\r\n            </Grid>\r\n            {price !== finalPrice ? (\r\n              <Grid item xs={3}>\r\n                <strong style={{ textDecoration: \"line-through\" }}>\r\n                  ₹ {price}\r\n                </strong>\r\n              </Grid>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} style={{ paddingTop: \"7px\" }}>\r\n            {isInStock ? (\r\n              <Button\r\n                disableElevation\r\n                variant=\"contained\"\r\n                fullWidth={isLargeScreen}\r\n                style={{ backgroundColor: \"#4fcf64\", color: \"#fff\" }}\r\n              >\r\n                ADD TO CART\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                disableElevation\r\n                variant=\"contained\"\r\n                disabled\r\n                fullWidth={isLargeScreen}\r\n                style={{ color: \"#fff\" }}\r\n              >\r\n                OUT OF STOCK\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress style={{ color: \"#4fcf64\" }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nexport default function ProductSkeleton({ viewAll }) {\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  return [1, 2, 3, 4, 5].map((ele, index) => {\r\n    if (!viewAll && index > 2) return null;\r\n    return (\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        key={ele}\r\n        sm={6}\r\n        md={4}\r\n        style={{\r\n          borderBottom: \"1px solid #f0f0f0\",\r\n          padding: isLargeScreen ? \"20px 20px\" : \"20px 0\",\r\n        }}\r\n      >\r\n        <div style={{ height: \"100%\", width: \"100%\" }}>\r\n          <Grid container spacing={2} style={{ height: \"100%\" }}>\r\n            <Grid item xs={4} sm={12} md={12}>\r\n              <Skeleton\r\n                variant=\"rect\"\r\n                width=\"100%\"\r\n                height={isLargeScreen ? 150 : \"100%\"}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              xs={8}\r\n              sm={12}\r\n              spacing={isLargeScreen ? 1 : 0}\r\n              md={12}\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              <Grid item xs={12}>\r\n                <Skeleton variant=\"text\" />\r\n              </Grid>\r\n              <Grid item xs={12} style={{ color: \"#757575\", fontSize: \"12px\" }}>\r\n                <Skeleton variant=\"text\" />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Skeleton variant=\"text\" />\r\n              </Grid>\r\n              <Grid item xs={12} style={{ paddingTop: \"5px\" }}>\r\n                <Skeleton variant=\"rect\" width=\"100%\" height=\"40px\" />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Grid>\r\n    );\r\n  });\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Button,\n  useMediaQuery,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport \"./App.css\";\nimport CategoryTab from \"./components/CategoryTab\";\nimport ProductTile from \"./components/ProductTile\";\nimport Loading from \"./components/Loading\";\nimport ProductSkeleton from \"./components/ProductSkeleton\";\n\nfunction App() {\n  const [currentCategory, setCurrentCategory] = useState(185);\n  const [categoryObj, setCategoryObj] = useState({});\n  const [viewAll, setViewAll] = useState(false);\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const queryConfig = { refetchOnWindowFocus: false, staleTime: 3e7 };\n  const { isLoading: isInitialLoading, data: categoryList } = useQuery(\n    \"categoryArr\",\n    () => {\n      return axios\n        .get(\n          \"https://backend.ustraa.com/rest/V1/api/homemenucategories/v1.0.1?device_type=mob\"\n        )\n        .then((res) => res.data.category_list);\n    },\n    queryConfig\n  );\n\n  const { isLoading, data: productList } = useQuery(\n    [\"productArr\", { currentCategory }],\n    ({ queryKey }) => {\n      const [_key, { currentCategory }] = queryKey;\n      return axios\n        .get(\n          `https://backend.ustraa.com/rest/V1/api/catalog/v1.0.1?category_id=${currentCategory}`\n        )\n        .then((res) => res.data?.products);\n    },\n    queryConfig\n  );\n\n  useEffect(() => {\n    let obj = {};\n    categoryList?.forEach((ele) => {\n      obj[ele.category_id] = ele.category_name;\n    });\n    setCategoryObj({ ...obj });\n  }, [categoryList]);\n\n\n  const handleMenu = (id) => {\n    setAnchorEl(null);\n    if (id) setCurrentCategory(id);\n  };\n\n  if (isInitialLoading) return <Loading />;\n  return (\n    <div className=\"App\">\n      <br />\n      <Container maxWidth=\"lg\">\n        <PerfectScrollbar>\n          <div style={{ display: \"flex\", flexWrap: \"nowrap\" }}>\n            {categoryList.map((ele) => (\n              <CategoryTab\n                key={ele.category_id}\n                title={ele.category_name}\n                image={ele.category_image}\n                onClick={() => setCurrentCategory(ele.category_id)}\n              />\n            ))}\n          </div>\n        </PerfectScrollbar>\n        <br />\n        <Grid container>\n          {isLoading ? (\n            <ProductSkeleton viewAll={viewAll} />\n          ) : (\n            productList.map((item, index) => {\n              if (!viewAll && index > 2) return null;\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  key={item.id}\n                  style={{\n                    borderBottom: \"1px solid #f0f0f0\",\n                    padding: isLargeScreen ? \"20px 20px\" : \"20px 0\",\n                  }}\n                >\n                  <ProductTile\n                    image={item.image_urls.x300}\n                    name={item.name}\n                    weight={item.weight + \" \" + item.weight_unit}\n                    isInStock={item.is_in_stock}\n                    price={item.price}\n                    finalPrice={item.final_price}\n                    rating={item.rating}\n                    reviewCount={item.review_count}\n                  />\n                </Grid>\n              );\n            })\n          )}\n        </Grid>\n        <Grid container>\n          <Grid item xs={8}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              style={{\n                fontSize: \"10px\",\n                textTransform: \"none\",\n                width: \"100%\",\n                padding: \"7px\",\n              }}\n              onClick={(e) => setAnchorEl(e.currentTarget)}\n            >\n              <Grid container>\n                <Grid item xs={4}>\n                  Showing for:\n                </Grid>\n                <Grid item xs={5} style={{ fontWeight: 900 }}>\n                  {categoryObj[currentCategory]}\n                </Grid>\n                <Grid item xs={3} style={{ textAlign: \"end\" }}>\n                  change\n                </Grid>\n              </Grid>\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              style={{\n                fontSize: \"10px\",\n                textTransform: \"none\",\n                width: \"100%\",\n                height: \"100%\",\n              }}\n              onClick={() => setViewAll(!viewAll)}\n            >\n              {viewAll ? \"[-] View Less\" : \"[+] View More\"}\n            </Button>\n          </Grid>\n        </Grid>\n        <Menu\n          id=\"categoryMenu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={() => handleMenu()}\n          style={{ width: \"100%\" }}\n        >\n          {categoryList.map((item) => (\n            <MenuItem\n              key={item.category_id}\n              onClick={() => handleMenu(item.category_id)}\n              style={{\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n                background:\n                  item.category_id === currentCategory\n                    ? \"#f0f0f0\"\n                    : \"transparent\",\n              }}\n            >\n              {item.category_name}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}